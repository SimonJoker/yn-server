<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

       <!--载入jdbc参数配置文件-->
       <context:property-placeholder location="classpath:config/jdbc.properties"/>

       <!--创建jdbc连接数据源-->
       <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
              <property name="driverClassName" value="${jdbc.driver}"/>
              <property name="url" value="${jdbc.url}" />
              <property name="username" value="${jdbc.username}" />
              <property name="password" value="${jdbc.password}" />
              <property name="initialSize" value="${jdbc.initialSize}" />
              <property name="minIdle" value="${jdbc.minIdle}" />
              <property name="maxActive" value="${jdbc.maxActive}" />
              <property name="maxWait" value="${jdbc.maxWait}" />
              <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
              <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
              <property name="validationQuery" value="${jdbc.validationQuery}" />
              <property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
              <property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
              <property name="testOnReturn" value="${jdbc.testOnReturn}" />
       </bean>

       <!-- 可通过注解控制事务 -->
       <tx:annotation-driven transaction-manager="transactionManager"/>
       <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
       <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
              <property name="dataSource" ref="dataSource" />
       </bean>

       <!-- 创建SqlSessionFactory，同时指定数据源 xml 配置dao层操作-->
       <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
              <property name="configLocation" value="classpath:config/mybatis.cfg.xml"></property>
              <property name="dataSource" ref="dataSource" />
       </bean>-->
       <!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
       <!--<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
       <!--<property name="basePackage" value="com.springapp.mvc.mapper" />-->
       <!--</bean>-->

       <!-- 创建SqlSessionFactory，同时指定数据源 -->
       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
              <property name="configLocation" value="classpath:config/mapper-cfg.xml"></property>
              <property name="dataSource" ref="dataSource" />
       </bean>

      <!-- <bean id="operMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
              <property name="mapperInterface" value="com.yunnong.mapper.ConMapper />
              <property name="sqlSessionFactory" ref="sqlSessionFactory" />
       </bean>

       <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
              <property name="mapperInterface" value="com.yunnong.mapper.UserMapper" />
              <property name="sqlSessionFactory" ref="sqlSessionFactory" />
       </bean>-->




</beans>